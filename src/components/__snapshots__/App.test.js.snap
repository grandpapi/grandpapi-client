// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component renders App 1`] = `
<BrowserRouter>
  <Switch>
    <Route
      component={[Function]}
      exact={true}
      path="/"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithoutSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/login"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(Callback)",
          "type": [Function],
        }
      }
      path="/callback"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/about"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/docs"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/apis"
    />
    <Route
      component={[Function]}
      path="/apis/:dbName"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/table3"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/careers"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/privacy"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      path="/dashboard/:dbName/:mdlName"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      path="/dashboard/:dbName"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/dashboard"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/endpoints"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/create/database"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/create/model"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(WithSession)",
          "type": [Function],
        }
      }
      exact={true}
      path="/create/data"
    />
  </Switch>
</BrowserRouter>
`;
